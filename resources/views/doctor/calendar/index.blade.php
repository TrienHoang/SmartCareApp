@extends('doctor.dashboard')

@section('content')
<style>
    /* Container ch√≠nh v·ªõi m√†u m·ªôc m·∫°c */
    .calendar-container {
        background: linear-gradient(135deg, #8B6F47, #D9C2A6); /* N√¢u ƒë·∫•t v√† be nh·∫°t */
        border-radius: 15px;
        padding: 2rem;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        max-width: 1400px;
        margin: 2rem auto;
    }

    .calendar-container:hover {
        transform: translateY(-10px);
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.5);
    }

    /* Card l·ªãch v·ªõi hi·ªáu ·ª©ng 3D */
    .calendar-card {
        background: #F5F5F5; /* M√†u be nh·∫°t */
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        transition: transform 0.2s ease;
    }

    .calendar-card:hover {
        transform: scale(1.02);
    }

    /* Header c·ªßa card */
    .calendar-card-header {
        background: linear-gradient(to right, #4A7043, #8B9A46); /* Xanh olive v√† n√¢u nh·∫°t */
        color: #FFF8E7; /* M√†u kem nh·∫°t cho ch·ªØ */
        padding: 1.5rem;
        border-bottom: 4px solid #3F5E3A; /* Xanh olive ƒë·∫≠m */
        text-align: center;
    }

    .calendar-card-header h4 {
        margin: 0;
        font-size: 1.8rem;
        font-weight: 600;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
    }

    /* Body c·ªßa card */
    .calendar-card-body {
        padding: 1.5rem;
    }

    /* FullCalendar */
    #calendar {
        max-width: 100%;
        height: 700px; /* TƒÉng chi·ªÅu cao */
        border-radius: 8px;
        background: #FAF3E0; /* M√†u be nh·∫°t m·ªôc m·∫°c */
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    /* T√πy ch·ªânh FullCalendar */
    .fc-daygrid-day-number {
        font-size: 1.2rem;
        font-weight: 500;
        color: #3F5E3A; /* Xanh olive ƒë·∫≠m */
        transition: color 0.3s ease;
    }

    .fc-daygrid-day-number:hover {
        color: #8B9A46; /* N√¢u nh·∫°t */
    }

    .fc-event {
        border-radius: 6px;
        font-size: 1rem;
        padding: 6px;
        cursor: pointer;
        color: #FFF8E7; /* M√†u kem nh·∫°t cho ch·ªØ */
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .fc-event:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
    }

    /* S·ª± ki·ªán c√¥ng vi·ªác (m√†u n√¢u ƒë·∫•t) */
    .fc-event.task {
        background: #8B6F47;
        border: 1px solid #6B4E31;
    }

    /* S·ª± ki·ªán l·ªãch h·∫πn (m√†u xanh olive) */
    .fc-event.appointment {
        background: #4A7043;
        border: 1px solid #3F5E3A;
    }

    .fc-button {
        border-radius: 6px !important;
        background: #6B4E31 !important; /* N√¢u ƒë·∫≠m */
        border: none !important;
        color: #FFF8E7 !important; /* M√†u kem nh·∫°t */
        transition: background 0.3s ease, transform 0.2s ease;
    }

    .fc-button:hover {
        background: #8B6F47 !important; /* N√¢u nh·∫°t */
        transform: translateY(-1px);
    }

    /* Responsive */
    @media (max-width: 768px) {
        .calendar-container {
            padding: 1rem;
            margin: 1rem;
        }

        .calendar-card-header h4 {
            font-size: 1.5rem;
        }

        #calendar {
            height: 500px;
        }

        .fc-daygrid-day-number {
            font-size: 1rem;
        }

        .fc-event {
            font-size: 0.9rem;
            padding: 4px;
        }
    }

    @media (max-width: 576px) {
        .calendar-card-header h4 {
            font-size: 1.2rem;
        }

        #calendar {
            height: 400px;
        }

        .fc-button {
            font-size: 0.8rem;
            padding: 0.5rem;
        }
    }
</style>

<div class="calendar-container">
    <div class="calendar-card">
        <div class="calendar-card-header">
            <h4><i class="bx bx-calendar me-2"></i>L·ªãch l√†m vi·ªác c·ªßa b·∫°n</h4>
        </div>
        <div class="calendar-card-body">
            <!-- L·ªãch -->
            <div id="calendar"></div>
        </div>
    </div>
</div>



@endsection

@push('scripts')
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function () {
    const calendarEl = document.getElementById('calendar');

    const calendar = new FullCalendar.Calendar(calendarEl, {
        initialView: 'dayGridMonth',
        locale: 'vi',
        height: 'auto',
        headerToolbar: {
            left: 'prev,next today',
            center: 'title',
            right: 'dayGridMonth,timeGridWeek,timeGridDay'
        },
        events: function (fetchInfo, successCallback, failureCallback) {
            const params = {
                start: fetchInfo.startStr,
                end: fetchInfo.endStr,
            };

            console.log('üì§ Request Parameters:', params);

            axios.get("{{ route('doctor.calendar.events') }}", { params })
                .then(response => {
                    console.log('‚úÖ ƒê√£ t·∫£i s·ª± ki·ªán:', response.data);
                    // Th√™m class cho s·ª± ki·ªán ƒë·ªÉ √°p d·ª•ng m√†u ri√™ng
                    response.data.forEach(event => {
                        if (event.id.startsWith('task_')) {
                            event.classNames = ['task'];
                        } else if (event.id.startsWith('appt_')) {
                            event.classNames = ['appointment'];
                        }
                    });
                    successCallback(response.data);
                })
                .catch(error => {
                    console.error('‚ùå L·ªói khi t·∫£i s·ª± ki·ªán:', error);
                    alert('Kh√¥ng th·ªÉ t·∫£i s·ª± ki·ªán. Vui l√≤ng th·ª≠ l·∫°i.');
                    failureCallback(error);
                });
        },
        eventClick: function (info) {
            console.log('üñ±Ô∏è S·ª± ki·ªán ƒë∆∞·ª£c nh·∫•p:', info.event);
            info.jsEvent.preventDefault();
            if (info.event.url && info.event.url !== '#') {
                window.location.href = info.event.url; // Chuy·ªÉn h∆∞·ªõng trong c√πng tab
            } else {
                console.warn('URL s·ª± ki·ªán kh√¥ng h·ª£p l·ªá:', info.event.url);
                alert('Kh√¥ng th·ªÉ xem chi ti·∫øt s·ª± ki·ªán do URL kh√¥ng h·ª£p l·ªá.');
            }
        },
        loading: function(bool) {
            console.log('üìä Tr·∫°ng th√°i t·∫£i l·ªãch:', bool);
        },
        eventDidMount: function(info) {
            console.log('üìÖ S·ª± ki·ªán ƒë∆∞·ª£c g·∫Øn:', info.event.title);
        }
    });

    calendar.render();
});
</script>
@endpush
